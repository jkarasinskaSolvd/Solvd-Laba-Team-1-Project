-- MySQL Script generated by MySQL Workbench
-- Thu Feb 27 14:00:24 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Optimising logistics for order fulfilment
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Optimising logistics for order fulfilment
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Optimising logistics for order fulfilment` DEFAULT CHARACTER SET utf8 ;
USE `Optimising logistics for order fulfilment` ;

-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`Address` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `country` VARCHAR(100) NOT NULL,
  `city` VARCHAR(100) NOT NULL,
  `street` VARCHAR(255) NOT NULL,
  `building` VARCHAR(10) NOT NULL,
  `apartment` VARCHAR(10) NOT NULL,
  `postal_code` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`Products` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `price` DECIMAL(10,2) NOT NULL CHECK (price > 0),
  `volume` DECIMAL(10,2) NOT NULL CHECK (volume > 0),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`Transport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`Transport` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `type` ENUM('Truck', 'Train', 'Airplane') NOT NULL,
  `max_capacity` DECIMAL(10,2) NOT NULL CHECK (max_capacity > 0),
  `cost_per_km` DECIMAL(10,2) NOT NULL CHECK (cost_per_km > 0),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`LogisticsCompanies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`LogisticsCompanies` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(225) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`CompanyTransport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`CompanyTransport` (
  `company_id` BIGINT(20) NOT NULL,
  `transport_id` BIGINT(20) NOT NULL,
  INDEX `company_id_idx` (`company_id` ASC) VISIBLE,
  INDEX `transport_id_idx` (`transport_id` ASC) VISIBLE,
  CONSTRAINT `company_id`
    FOREIGN KEY (`company_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`LogisticsCompanies` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `transport_id`
    FOREIGN KEY (`transport_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`Transport` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`Warehouses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`Warehouses` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `address_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Warehouses_Address1_idx` (`address_id` ASC) VISIBLE,
  CONSTRAINT `fk_Warehouses_Address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`Address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`WarehouseProducts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`WarehouseProducts` (
  `warehouse_id` BIGINT(20) NOT NULL,
  `product_id` BIGINT(20) NOT NULL,
  INDEX `product_id_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `warehouse_id`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`Warehouses` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `product_id`
    FOREIGN KEY (`product_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`Products` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`Warehouse_AllowedTransport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`Warehouse_AllowedTransport` (
  `warehouse_AllowedTransport_id` BIGINT(20) NOT NULL,
  `transport_type_warehouse` ENUM('Truck', 'Train', 'Airplane') NOT NULL,
  CONSTRAINT `warehouse_AllowedTransport_id`
    FOREIGN KEY (`warehouse_AllowedTransport_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`Warehouses` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`Orders` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `delivery_address_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `delivery_address_id_idx` (`delivery_address_id` ASC) VISIBLE,
  CONSTRAINT `delivery_address_id`
    FOREIGN KEY (`delivery_address_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`Address` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`OrderItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`OrderItems` (
  `order_id` BIGINT(20) NOT NULL,
  `product_id_OrderItems` BIGINT(20) NOT NULL,
  `quantity_OrderItems` INT NOT NULL CHECK (quantity_OrderItems > 0),
  INDEX `product_id_OrderItems_idx` (`product_id_OrderItems` ASC) VISIBLE,
  CONSTRAINT `order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `Optimising logistics for order fulfilment`.`Orders` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `product_id_OrderItems`
    FOREIGN KEY (`product_id_OrderItems`)
    REFERENCES `Optimising logistics for order fulfilment`.`Products` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Optimising logistics for order fulfilment`.`Distance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optimising logistics for order fulfilment`.`Distance` (
  `warehouse_id_distance` BIGINT(20) NOT NULL,
  `delivery_address_id_distance` BIGINT(20) NOT NULL,
  `distance_km` DECIMAL(10,2) NOT NULL CHECK (distance_km > 0),
  INDEX `warehouse_id_distance_idx` (`warehouse_id_distance` ASC) VISIBLE,
  INDEX `delivery_address_id_distance_idx` (`delivery_address_id_distance` ASC) VISIBLE,
  CONSTRAINT `warehouse_id_distance`
    FOREIGN KEY (`warehouse_id_distance`)
    REFERENCES `Optimising logistics for order fulfilment`.`Warehouses` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `delivery_address_id_distance`
    FOREIGN KEY (`delivery_address_id_distance`)
    REFERENCES `Optimising logistics for order fulfilment`.`Address` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
